{
  "openapi": "3.1.0",
  "info": {
    "title": "Slash Public API",
    "description": "API description",
    "version": "0.0.1",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://api.joinslash.com",
      "description": "production"
    }
  ],
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "rawStatus": {
            "type": "number"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "message",
          "name",
          "identifier",
          "rawStatus"
        ],
        "x-entrypoint": {
          "origin": "./src/publicApi",
          "sourcePath": "./src/publicApi/main.yaml",
          "title": "Error",
          "virtualPath": "components/Error"
        },
        "title": "Error"
      },
      "Card": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "accountId": {
            "type": "string",
            "description": "The account that this card is associated with"
          },
          "last4": {
            "type": "string",
            "description": "The last 4 digits of the card number"
          },
          "name": {
            "type": "string",
            "description": "The name assigned to the card that appears on the user dashboard"
          },
          "expiryMonth": {
            "type": "string",
            "description": "The month the card expires formatted as MM (01, 02, ..., 12)"
          },
          "expiryYear": {
            "type": "string",
            "description": "The year the card expires formatted as YYYY (2024, 2025, ...)"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardStatus",
                "x-entrypoint": {
                  "virtualPath": "schemas/CardStatus",
                  "sourcePath": "schemas/CardStatus.yaml",
                  "title": "CardStatus",
                  "origin": "./src/publicApi"
                }
              },
              {
                "description": "The status of the card"
              }
            ]
          },
          "isPhysical": {
            "type": "boolean",
            "description": "When true, a physical card has been issued. Otherwise, this is a virtual card."
          },
          "pan": {
            "type": "string",
            "description": "This field contains the full PAN which will only be sent on a request for a single card when you set the query param \"include_pan\" to \"true\""
          },
          "cvv": {
            "type": "string",
            "description": "This field will contain full CVV which will only be sent on a request for a single card when you set the query param \"include_pan\" to \"true\""
          },
          "cardGroupId": {
            "type": "string",
            "description": "The card group the card belongs to."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "accountId",
          "last4",
          "name",
          "expiryMonth",
          "expiryYear",
          "status",
          "isPhysical"
        ],
        "x-entrypoint": {
          "virtualPath": "schemas/Card",
          "sourcePath": "schemas/Card.yaml",
          "title": "Card",
          "origin": "./src/publicApi"
        },
        "title": "Card"
      },
      "CardStatus": {
        "type": "string",
        "enum": [
          "active",
          "paused",
          "inactive",
          "closed"
        ],
        "x-entrypoint": {
          "virtualPath": "schemas/CardStatus",
          "sourcePath": "schemas/CardStatus.yaml",
          "title": "CardStatus",
          "origin": "./src/publicApi"
        },
        "title": "CardStatus"
      },
      "Pagination.PaginationResponse": {
        "type": "object",
        "description": "Response sent when requesting a list of data",
        "properties": {
          "nextCursor": {
            "type": "string",
            "description": "The cursor to use to retrieve the next page of data. If this is not sent, there is no more data to retrieve."
          },
          "count": {
            "type": "number",
            "description": "The number of items in the current page of data."
          }
        },
        "x-entrypoint": {
          "virtualPath": "schemas/Pagination/PaginationResponse",
          "sourcePath": "schemas/Pagination/PaginationResponse.yaml",
          "title": "PaginationResponse",
          "origin": "./src/publicApi"
        },
        "title": "PaginationResponse"
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          "accountNumber": {
            "type": "string"
          },
          "routingNumber": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "status",
          "accountNumber",
          "routingNumber",
          "createdAt"
        ],
        "x-entrypoint": {
          "virtualPath": "schemas/Account",
          "sourcePath": "schemas/Account.yaml",
          "title": "Account",
          "origin": "./src/publicApi"
        },
        "title": "Account"
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "description": "Authentication from public API requests",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/card": {
      "get": {
        "description": "Retrieve the list of cards that the user owns.",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "A cursor string to fetch the next page of results",
            "x-reference-path": "schemas/Pagination/CursorParameter.yaml"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Card",
                        "x-entrypoint": {
                          "virtualPath": "schemas/Card",
                          "sourcePath": "schemas/Card.yaml",
                          "title": "Card",
                          "origin": "./src/publicApi"
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/Pagination.PaginationResponse",
                      "x-entrypoint": {
                        "virtualPath": "schemas/Pagination/PaginationResponse",
                        "sourcePath": "schemas/Pagination/PaginationResponse.yaml",
                        "title": "PaginationResponse",
                        "origin": "./src/publicApi"
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a card",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Specify the type of card you'd like to create. At the moment, only virtual cards are supported.",
                    "enum": [
                      "virtual"
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card",
                  "x-entrypoint": {
                    "virtualPath": "schemas/Card",
                    "sourcePath": "schemas/Card.yaml",
                    "title": "Card",
                    "origin": "./src/publicApi"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "x-reference-path": "paths/card/route.yaml"
    },
    "/card/{cardId}": {
      "parameters": [
        {
          "name": "cardId",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "patch": {
        "description": "Update a card",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/CardStatus",
                    "x-entrypoint": {
                      "virtualPath": "schemas/CardStatus",
                      "sourcePath": "schemas/CardStatus.yaml",
                      "title": "CardStatus",
                      "origin": "./src/publicApi"
                    }
                  },
                  "cardGroupId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Explicitly set this value to null to remove the card from a group. Omitting this field entirely will not affect the group the card belongs to."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card",
                  "x-entrypoint": {
                    "virtualPath": "schemas/Card",
                    "sourcePath": "schemas/Card.yaml",
                    "title": "Card",
                    "origin": "./src/publicApi"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Fetch details for a single card by card ID",
        "parameters": [
          {
            "in": "query",
            "name": "include_pan",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "include_cvv",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Card",
                  "x-entrypoint": {
                    "virtualPath": "schemas/Card",
                    "sourcePath": "schemas/Card.yaml",
                    "title": "Card",
                    "origin": "./src/publicApi"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "x-reference-path": "paths/card/{cardId}/route.yaml"
    },
    "/account": {
      "get": {
        "description": "List all accounts belonging to your legal entity",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account",
                        "x-entrypoint": {
                          "virtualPath": "schemas/Account",
                          "sourcePath": "schemas/Account.yaml",
                          "title": "Account",
                          "origin": "./src/publicApi"
                        }
                      }
                    },
                    "metadata": {
                      "$ref": "#/components/schemas/Pagination.PaginationResponse",
                      "x-entrypoint": {
                        "virtualPath": "schemas/Pagination/PaginationResponse",
                        "sourcePath": "schemas/Pagination/PaginationResponse.yaml",
                        "title": "PaginationResponse",
                        "origin": "./src/publicApi"
                      }
                    }
                  },
                  "required": [
                    "items",
                    "metadata"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "x-reference-path": "paths/account/route.yaml"
    },
    "/account/{accountId}": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "description": "Get a single account by Id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account",
                  "x-entrypoint": {
                    "virtualPath": "schemas/Account",
                    "sourcePath": "schemas/Account.yaml",
                    "title": "Account",
                    "origin": "./src/publicApi"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "x-reference-path": "paths/account/{accountId}/route.yaml"
    },
    "/account/{accountId}/balance": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "description": "Get the balance for an account",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accountId": {
                      "type": "string"
                    },
                    "availableBalance": {
                      "type": "object",
                      "properties": {
                        "amountCents": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "amountCents"
                      ]
                    }
                  },
                  "required": [
                    "accountId",
                    "availableBalance"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "TooManyRequests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "x-reference-path": "paths/account/{accountId}/balance/route.yaml"
    }
  }
}